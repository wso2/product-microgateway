// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wso2/discovery/subscription/application_key_mapping.proto

package org.wso2.choreo.connect.discovery.subscription;

/**
 * <pre>
 * ApplicationKeyMapping data model
 * </pre>
 *
 * Protobuf type {@code wso2.discovery.subscription.ApplicationKeyMapping}
 */
public final class ApplicationKeyMapping extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:wso2.discovery.subscription.ApplicationKeyMapping)
    ApplicationKeyMappingOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ApplicationKeyMapping.newBuilder() to construct.
  private ApplicationKeyMapping(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ApplicationKeyMapping() {
    consumerKey_ = "";
    keyType_ = "";
    keyManager_ = "";
    tenantDomain_ = "";
    applicationUUID_ = "";
    envId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ApplicationKeyMapping();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ApplicationKeyMapping(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            consumerKey_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            keyType_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            keyManager_ = s;
            break;
          }
          case 32: {

            applicationId_ = input.readInt32();
            break;
          }
          case 40: {

            tenantId_ = input.readInt32();
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            tenantDomain_ = s;
            break;
          }
          case 56: {

            timestamp_ = input.readInt64();
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            applicationUUID_ = s;
            break;
          }
          case 74: {
            java.lang.String s = input.readStringRequireUtf8();

            envId_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMappingProto.internal_static_wso2_discovery_subscription_ApplicationKeyMapping_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMappingProto.internal_static_wso2_discovery_subscription_ApplicationKeyMapping_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping.class, org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping.Builder.class);
  }

  public static final int CONSUMERKEY_FIELD_NUMBER = 1;
  private volatile java.lang.Object consumerKey_;
  /**
   * <code>string consumerKey = 1;</code>
   * @return The consumerKey.
   */
  @java.lang.Override
  public java.lang.String getConsumerKey() {
    java.lang.Object ref = consumerKey_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      consumerKey_ = s;
      return s;
    }
  }
  /**
   * <code>string consumerKey = 1;</code>
   * @return The bytes for consumerKey.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getConsumerKeyBytes() {
    java.lang.Object ref = consumerKey_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      consumerKey_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int KEYTYPE_FIELD_NUMBER = 2;
  private volatile java.lang.Object keyType_;
  /**
   * <code>string keyType = 2;</code>
   * @return The keyType.
   */
  @java.lang.Override
  public java.lang.String getKeyType() {
    java.lang.Object ref = keyType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      keyType_ = s;
      return s;
    }
  }
  /**
   * <code>string keyType = 2;</code>
   * @return The bytes for keyType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getKeyTypeBytes() {
    java.lang.Object ref = keyType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      keyType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int KEYMANAGER_FIELD_NUMBER = 3;
  private volatile java.lang.Object keyManager_;
  /**
   * <code>string keyManager = 3;</code>
   * @return The keyManager.
   */
  @java.lang.Override
  public java.lang.String getKeyManager() {
    java.lang.Object ref = keyManager_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      keyManager_ = s;
      return s;
    }
  }
  /**
   * <code>string keyManager = 3;</code>
   * @return The bytes for keyManager.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getKeyManagerBytes() {
    java.lang.Object ref = keyManager_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      keyManager_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int APPLICATIONID_FIELD_NUMBER = 4;
  private int applicationId_;
  /**
   * <code>int32 applicationId = 4;</code>
   * @return The applicationId.
   */
  @java.lang.Override
  public int getApplicationId() {
    return applicationId_;
  }

  public static final int TENANTID_FIELD_NUMBER = 5;
  private int tenantId_;
  /**
   * <code>int32 tenantId = 5;</code>
   * @return The tenantId.
   */
  @java.lang.Override
  public int getTenantId() {
    return tenantId_;
  }

  public static final int TENANTDOMAIN_FIELD_NUMBER = 6;
  private volatile java.lang.Object tenantDomain_;
  /**
   * <code>string tenantDomain = 6;</code>
   * @return The tenantDomain.
   */
  @java.lang.Override
  public java.lang.String getTenantDomain() {
    java.lang.Object ref = tenantDomain_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      tenantDomain_ = s;
      return s;
    }
  }
  /**
   * <code>string tenantDomain = 6;</code>
   * @return The bytes for tenantDomain.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTenantDomainBytes() {
    java.lang.Object ref = tenantDomain_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      tenantDomain_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TIMESTAMP_FIELD_NUMBER = 7;
  private long timestamp_;
  /**
   * <code>int64 timestamp = 7;</code>
   * @return The timestamp.
   */
  @java.lang.Override
  public long getTimestamp() {
    return timestamp_;
  }

  public static final int APPLICATIONUUID_FIELD_NUMBER = 8;
  private volatile java.lang.Object applicationUUID_;
  /**
   * <code>string applicationUUID = 8;</code>
   * @return The applicationUUID.
   */
  @java.lang.Override
  public java.lang.String getApplicationUUID() {
    java.lang.Object ref = applicationUUID_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      applicationUUID_ = s;
      return s;
    }
  }
  /**
   * <code>string applicationUUID = 8;</code>
   * @return The bytes for applicationUUID.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getApplicationUUIDBytes() {
    java.lang.Object ref = applicationUUID_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      applicationUUID_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENVID_FIELD_NUMBER = 9;
  private volatile java.lang.Object envId_;
  /**
   * <code>string envId = 9;</code>
   * @return The envId.
   */
  @java.lang.Override
  public java.lang.String getEnvId() {
    java.lang.Object ref = envId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      envId_ = s;
      return s;
    }
  }
  /**
   * <code>string envId = 9;</code>
   * @return The bytes for envId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getEnvIdBytes() {
    java.lang.Object ref = envId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      envId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getConsumerKeyBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, consumerKey_);
    }
    if (!getKeyTypeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, keyType_);
    }
    if (!getKeyManagerBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, keyManager_);
    }
    if (applicationId_ != 0) {
      output.writeInt32(4, applicationId_);
    }
    if (tenantId_ != 0) {
      output.writeInt32(5, tenantId_);
    }
    if (!getTenantDomainBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, tenantDomain_);
    }
    if (timestamp_ != 0L) {
      output.writeInt64(7, timestamp_);
    }
    if (!getApplicationUUIDBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, applicationUUID_);
    }
    if (!getEnvIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, envId_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getConsumerKeyBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, consumerKey_);
    }
    if (!getKeyTypeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, keyType_);
    }
    if (!getKeyManagerBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, keyManager_);
    }
    if (applicationId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, applicationId_);
    }
    if (tenantId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, tenantId_);
    }
    if (!getTenantDomainBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, tenantDomain_);
    }
    if (timestamp_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(7, timestamp_);
    }
    if (!getApplicationUUIDBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, applicationUUID_);
    }
    if (!getEnvIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, envId_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping)) {
      return super.equals(obj);
    }
    org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping other = (org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping) obj;

    if (!getConsumerKey()
        .equals(other.getConsumerKey())) return false;
    if (!getKeyType()
        .equals(other.getKeyType())) return false;
    if (!getKeyManager()
        .equals(other.getKeyManager())) return false;
    if (getApplicationId()
        != other.getApplicationId()) return false;
    if (getTenantId()
        != other.getTenantId()) return false;
    if (!getTenantDomain()
        .equals(other.getTenantDomain())) return false;
    if (getTimestamp()
        != other.getTimestamp()) return false;
    if (!getApplicationUUID()
        .equals(other.getApplicationUUID())) return false;
    if (!getEnvId()
        .equals(other.getEnvId())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CONSUMERKEY_FIELD_NUMBER;
    hash = (53 * hash) + getConsumerKey().hashCode();
    hash = (37 * hash) + KEYTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getKeyType().hashCode();
    hash = (37 * hash) + KEYMANAGER_FIELD_NUMBER;
    hash = (53 * hash) + getKeyManager().hashCode();
    hash = (37 * hash) + APPLICATIONID_FIELD_NUMBER;
    hash = (53 * hash) + getApplicationId();
    hash = (37 * hash) + TENANTID_FIELD_NUMBER;
    hash = (53 * hash) + getTenantId();
    hash = (37 * hash) + TENANTDOMAIN_FIELD_NUMBER;
    hash = (53 * hash) + getTenantDomain().hashCode();
    hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTimestamp());
    hash = (37 * hash) + APPLICATIONUUID_FIELD_NUMBER;
    hash = (53 * hash) + getApplicationUUID().hashCode();
    hash = (37 * hash) + ENVID_FIELD_NUMBER;
    hash = (53 * hash) + getEnvId().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * ApplicationKeyMapping data model
   * </pre>
   *
   * Protobuf type {@code wso2.discovery.subscription.ApplicationKeyMapping}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:wso2.discovery.subscription.ApplicationKeyMapping)
      org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMappingOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMappingProto.internal_static_wso2_discovery_subscription_ApplicationKeyMapping_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMappingProto.internal_static_wso2_discovery_subscription_ApplicationKeyMapping_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping.class, org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping.Builder.class);
    }

    // Construct using org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      consumerKey_ = "";

      keyType_ = "";

      keyManager_ = "";

      applicationId_ = 0;

      tenantId_ = 0;

      tenantDomain_ = "";

      timestamp_ = 0L;

      applicationUUID_ = "";

      envId_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMappingProto.internal_static_wso2_discovery_subscription_ApplicationKeyMapping_descriptor;
    }

    @java.lang.Override
    public org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping getDefaultInstanceForType() {
      return org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping.getDefaultInstance();
    }

    @java.lang.Override
    public org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping build() {
      org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping buildPartial() {
      org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping result = new org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping(this);
      result.consumerKey_ = consumerKey_;
      result.keyType_ = keyType_;
      result.keyManager_ = keyManager_;
      result.applicationId_ = applicationId_;
      result.tenantId_ = tenantId_;
      result.tenantDomain_ = tenantDomain_;
      result.timestamp_ = timestamp_;
      result.applicationUUID_ = applicationUUID_;
      result.envId_ = envId_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping) {
        return mergeFrom((org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping other) {
      if (other == org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping.getDefaultInstance()) return this;
      if (!other.getConsumerKey().isEmpty()) {
        consumerKey_ = other.consumerKey_;
        onChanged();
      }
      if (!other.getKeyType().isEmpty()) {
        keyType_ = other.keyType_;
        onChanged();
      }
      if (!other.getKeyManager().isEmpty()) {
        keyManager_ = other.keyManager_;
        onChanged();
      }
      if (other.getApplicationId() != 0) {
        setApplicationId(other.getApplicationId());
      }
      if (other.getTenantId() != 0) {
        setTenantId(other.getTenantId());
      }
      if (!other.getTenantDomain().isEmpty()) {
        tenantDomain_ = other.tenantDomain_;
        onChanged();
      }
      if (other.getTimestamp() != 0L) {
        setTimestamp(other.getTimestamp());
      }
      if (!other.getApplicationUUID().isEmpty()) {
        applicationUUID_ = other.applicationUUID_;
        onChanged();
      }
      if (!other.getEnvId().isEmpty()) {
        envId_ = other.envId_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object consumerKey_ = "";
    /**
     * <code>string consumerKey = 1;</code>
     * @return The consumerKey.
     */
    public java.lang.String getConsumerKey() {
      java.lang.Object ref = consumerKey_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        consumerKey_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string consumerKey = 1;</code>
     * @return The bytes for consumerKey.
     */
    public com.google.protobuf.ByteString
        getConsumerKeyBytes() {
      java.lang.Object ref = consumerKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        consumerKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string consumerKey = 1;</code>
     * @param value The consumerKey to set.
     * @return This builder for chaining.
     */
    public Builder setConsumerKey(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      consumerKey_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string consumerKey = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearConsumerKey() {
      
      consumerKey_ = getDefaultInstance().getConsumerKey();
      onChanged();
      return this;
    }
    /**
     * <code>string consumerKey = 1;</code>
     * @param value The bytes for consumerKey to set.
     * @return This builder for chaining.
     */
    public Builder setConsumerKeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      consumerKey_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object keyType_ = "";
    /**
     * <code>string keyType = 2;</code>
     * @return The keyType.
     */
    public java.lang.String getKeyType() {
      java.lang.Object ref = keyType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string keyType = 2;</code>
     * @return The bytes for keyType.
     */
    public com.google.protobuf.ByteString
        getKeyTypeBytes() {
      java.lang.Object ref = keyType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string keyType = 2;</code>
     * @param value The keyType to set.
     * @return This builder for chaining.
     */
    public Builder setKeyType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      keyType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string keyType = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearKeyType() {
      
      keyType_ = getDefaultInstance().getKeyType();
      onChanged();
      return this;
    }
    /**
     * <code>string keyType = 2;</code>
     * @param value The bytes for keyType to set.
     * @return This builder for chaining.
     */
    public Builder setKeyTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      keyType_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object keyManager_ = "";
    /**
     * <code>string keyManager = 3;</code>
     * @return The keyManager.
     */
    public java.lang.String getKeyManager() {
      java.lang.Object ref = keyManager_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyManager_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string keyManager = 3;</code>
     * @return The bytes for keyManager.
     */
    public com.google.protobuf.ByteString
        getKeyManagerBytes() {
      java.lang.Object ref = keyManager_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyManager_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string keyManager = 3;</code>
     * @param value The keyManager to set.
     * @return This builder for chaining.
     */
    public Builder setKeyManager(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      keyManager_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string keyManager = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearKeyManager() {
      
      keyManager_ = getDefaultInstance().getKeyManager();
      onChanged();
      return this;
    }
    /**
     * <code>string keyManager = 3;</code>
     * @param value The bytes for keyManager to set.
     * @return This builder for chaining.
     */
    public Builder setKeyManagerBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      keyManager_ = value;
      onChanged();
      return this;
    }

    private int applicationId_ ;
    /**
     * <code>int32 applicationId = 4;</code>
     * @return The applicationId.
     */
    @java.lang.Override
    public int getApplicationId() {
      return applicationId_;
    }
    /**
     * <code>int32 applicationId = 4;</code>
     * @param value The applicationId to set.
     * @return This builder for chaining.
     */
    public Builder setApplicationId(int value) {
      
      applicationId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 applicationId = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearApplicationId() {
      
      applicationId_ = 0;
      onChanged();
      return this;
    }

    private int tenantId_ ;
    /**
     * <code>int32 tenantId = 5;</code>
     * @return The tenantId.
     */
    @java.lang.Override
    public int getTenantId() {
      return tenantId_;
    }
    /**
     * <code>int32 tenantId = 5;</code>
     * @param value The tenantId to set.
     * @return This builder for chaining.
     */
    public Builder setTenantId(int value) {
      
      tenantId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 tenantId = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearTenantId() {
      
      tenantId_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object tenantDomain_ = "";
    /**
     * <code>string tenantDomain = 6;</code>
     * @return The tenantDomain.
     */
    public java.lang.String getTenantDomain() {
      java.lang.Object ref = tenantDomain_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tenantDomain_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string tenantDomain = 6;</code>
     * @return The bytes for tenantDomain.
     */
    public com.google.protobuf.ByteString
        getTenantDomainBytes() {
      java.lang.Object ref = tenantDomain_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tenantDomain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string tenantDomain = 6;</code>
     * @param value The tenantDomain to set.
     * @return This builder for chaining.
     */
    public Builder setTenantDomain(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      tenantDomain_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string tenantDomain = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearTenantDomain() {
      
      tenantDomain_ = getDefaultInstance().getTenantDomain();
      onChanged();
      return this;
    }
    /**
     * <code>string tenantDomain = 6;</code>
     * @param value The bytes for tenantDomain to set.
     * @return This builder for chaining.
     */
    public Builder setTenantDomainBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      tenantDomain_ = value;
      onChanged();
      return this;
    }

    private long timestamp_ ;
    /**
     * <code>int64 timestamp = 7;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public long getTimestamp() {
      return timestamp_;
    }
    /**
     * <code>int64 timestamp = 7;</code>
     * @param value The timestamp to set.
     * @return This builder for chaining.
     */
    public Builder setTimestamp(long value) {
      
      timestamp_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 timestamp = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimestamp() {
      
      timestamp_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object applicationUUID_ = "";
    /**
     * <code>string applicationUUID = 8;</code>
     * @return The applicationUUID.
     */
    public java.lang.String getApplicationUUID() {
      java.lang.Object ref = applicationUUID_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        applicationUUID_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string applicationUUID = 8;</code>
     * @return The bytes for applicationUUID.
     */
    public com.google.protobuf.ByteString
        getApplicationUUIDBytes() {
      java.lang.Object ref = applicationUUID_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        applicationUUID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string applicationUUID = 8;</code>
     * @param value The applicationUUID to set.
     * @return This builder for chaining.
     */
    public Builder setApplicationUUID(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      applicationUUID_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string applicationUUID = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearApplicationUUID() {
      
      applicationUUID_ = getDefaultInstance().getApplicationUUID();
      onChanged();
      return this;
    }
    /**
     * <code>string applicationUUID = 8;</code>
     * @param value The bytes for applicationUUID to set.
     * @return This builder for chaining.
     */
    public Builder setApplicationUUIDBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      applicationUUID_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object envId_ = "";
    /**
     * <code>string envId = 9;</code>
     * @return The envId.
     */
    public java.lang.String getEnvId() {
      java.lang.Object ref = envId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        envId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string envId = 9;</code>
     * @return The bytes for envId.
     */
    public com.google.protobuf.ByteString
        getEnvIdBytes() {
      java.lang.Object ref = envId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        envId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string envId = 9;</code>
     * @param value The envId to set.
     * @return This builder for chaining.
     */
    public Builder setEnvId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      envId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string envId = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnvId() {
      
      envId_ = getDefaultInstance().getEnvId();
      onChanged();
      return this;
    }
    /**
     * <code>string envId = 9;</code>
     * @param value The bytes for envId to set.
     * @return This builder for chaining.
     */
    public Builder setEnvIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      envId_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:wso2.discovery.subscription.ApplicationKeyMapping)
  }

  // @@protoc_insertion_point(class_scope:wso2.discovery.subscription.ApplicationKeyMapping)
  private static final org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping();
  }

  public static org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ApplicationKeyMapping>
      PARSER = new com.google.protobuf.AbstractParser<ApplicationKeyMapping>() {
    @java.lang.Override
    public ApplicationKeyMapping parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ApplicationKeyMapping(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ApplicationKeyMapping> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ApplicationKeyMapping> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.wso2.choreo.connect.discovery.subscription.ApplicationKeyMapping getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

