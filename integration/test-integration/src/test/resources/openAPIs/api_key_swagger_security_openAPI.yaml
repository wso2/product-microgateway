swagger: '2.0'
info:
  description: 'This is a sample server Petstore server.'
  version: 1.0.0
  title: APIKey Test API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'mockBackend:2383'
basePath: /v2
x-wso2-basePath: /apiKey/1.0.0
security:
  - APIKeyAuthHeader: []
schemes:
  - http
paths:
  '/pet/{petId}':
    get:
      summary: Find pet by ID
      produces:
        - application/json
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Pet'
        '404':
          description: Pet not found
      security:
        - APIKeyAuth: []
        - APIKeyAuth2: []
        - APIKeyAuth3: []
  '/pet/findByTags':
    get:
      summary: Finds one pet by tags
      produces:
        - application/json
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
        '400':
          description: Invalid tag value
  '/pets/findByTags':
    get:
      summary: Finds Pets by tags
      produces:
        - application/json
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
        '400':
          description: Invalid tag value
      security:
        - petstore_auth:
            - write:pets
  '/jwtheader':
    get:
      summary: Allows to validate backend JWT generation
      produces:
        - application/json
      parameters:
        - name: jwtParameters
          in: query
          description: Backend JWT generation validator
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/jwt'
        '400':
          description: Invalid JWT header value
securityDefinitions:
  APIKeyAuth:
    type: apiKey
    name: x-api-key
    in: query
  APIKeyAuthHeader:
    type: apiKey
    name: x-api-key-header
    in: header
  petstore_auth:
    type: oauth2
    authorizationUrl: 'http://mockBackend:2380/oauth/authorize'
    flow: implicit
    scopes:
      'read:pets2': read your pets
      'write:pets2': modify pets in your account
  APIKeyAuth2:
    type: apiKey
    name: X-APIKEY
    in: header
  APIKeyAuth3:
    type: apiKey
    name: X-ApiKey-Q
    in: query
definitions:
  Pet:
    type: object
    required:
      - name
      - photoUrls
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: doggie
      photoUrls:
        type: array
        xml:
          wrapped: true
        items:
          type: string
          xml:
            name: photoUrl
      status:
        type: string
        description: pet status in the store
        enum:
          - available
          - pending
          - sold
