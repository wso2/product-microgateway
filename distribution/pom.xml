<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  ~  Copyright (c) WSO2 Inc. (http://wso2.com) All Rights Reserved.
  ~
  ~  WSO2 Inc. licenses this file to you under the Apache License,
  ~  Version 2.0 (the "License"); you may not use this file except
  ~  in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing,
  ~  software distributed under the License is distributed on an
  ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~  KIND, either express or implied.  See the License for the
  ~  specific language governing permissions and limitations
  ~  under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>org.wso2.am.microgw</groupId>
        <artifactId>micro-gateway-parent</artifactId>
        <version>3.2.10</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>wso2am-micro-gw</artifactId>
    <packaging>pom</packaging>
    <name>Micro Gateway - Distribution </name>
    <description>WSO2 Micro Gateway Distribution</description>

    <dependencies>
        <dependency>
            <groupId>org.wso2.am.microgw</groupId>
            <artifactId>org.wso2.micro.gateway.cli</artifactId>
        </dependency>
        <dependency>
            <groupId>com.moandjiezana.toml</groupId>
            <artifactId>toml4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wso2.am.microgw</groupId>
            <artifactId>org.wso2.micro.gateway.core</artifactId>
            <type>zip</type>
            <classifier>mgw-balo</classifier>
        </dependency>
        <dependency>
            <groupId>org.wso2.andes.wso2</groupId>
            <artifactId>andes-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.prometheus.jmx</groupId>
            <artifactId>jmx_prometheus_javaagent</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wso2.am.microgw</groupId>
            <artifactId>org.wso2.micro.gateway.tools</artifactId>
        </dependency>
        <!--required for the message broker-->
        <dependency>
            <groupId>org.wso2.securevault</groupId>
            <artifactId>org.wso2.securevault</artifactId>
            <version>${org.wso2.securevault.version}</version>
        </dependency>
        <dependency>
            <groupId>org.wso2.orbit.com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>${com.jayway.jsonpath.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${com.google.guava.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wso2.carbon.callhome</groupId>
            <artifactId>core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wso2.orbit.com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>${org.wso2.orbit.com.lmax}</version>
        </dependency>
        <dependency>
            <groupId>org.wso2.carbon.analytics-common</groupId>
            <artifactId>org.wso2.carbon.databridge.commons</artifactId>
            <version>${org.wso2.carbon.analytics-common}</version>
        </dependency>
        <dependency>
            <groupId>org.wso2.carbon.analytics-common</groupId>
            <artifactId>org.wso2.carbon.databridge.commons.binary</artifactId>
            <version>${org.wso2.carbon.analytics-common}</version>
        </dependency>
        <dependency>
            <groupId>org.wso2.carbon.apimgt</groupId>
            <artifactId>org.wso2.carbon.apimgt.common.analytics</artifactId>
            <version>${carbon.apimgt.version}</version>
        </dependency>
        <dependency>
            <groupId>org.wso2.am.analytics.publisher</groupId>
            <artifactId>org.wso2.am.analytics.publisher.client</artifactId>
            <version>${analytics.event.publisher.client.version}</version>
        </dependency>
        <dependency>
            <groupId>ua.parser.wso2</groupId>
            <artifactId>ua-parser</artifactId>
            <version>${ua_parser.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <version>${download.plugin.version}</version>
                <executions>
                    <execution>
                        <id>download-ballerina</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://dist.ballerina.io/downloads/${ballerina.platform.version}/jballerina-${ballerina.platform.version}.zip</url>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}/ballerina</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download-jdk-linux</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://github.com/adoptium/temurin8-binaries/releases/download/jdk8u382-b05/OpenJDK8U-jre_x64_linux_hotspot_8u382b05.tar.gz</url>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}/extracted-jre-linux</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download-jdk-mac</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://github.com/adoptium/temurin8-binaries/releases/download/jdk8u382-b05/OpenJDK8U-jre_x64_mac_hotspot_8u382b05.tar.gz</url>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}/extracted-jre-macos</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>download-jdk-windows</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://github.com/adoptium/temurin8-binaries/releases/download/jdk8u382-b05/OpenJDK8U-jre_x64_windows_hotspot_8u382b05.zip</url>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}/extracted-jre-windows</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-gw-balo</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeClassifiers>mgw-balo</includeClassifiers>
                            <outputDirectory>${project.build.directory}/lib/gw-balo/</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib/dependencies/</outputDirectory>
                            <includeGroupIds>
                                org.wso2.andes.wso2, org.wso2.securevault, org.wso2.am.microgw,
                                org.wso2.carbon.analytics-common, org.wso2.orbit.com.lmax
                            </includeGroupIds>
                            <includeArtifactIds>
                                andes-client, org.wso2.securevault, mgw-interceptor, mgw-jwt-transformer,
                                mgw-jwt-generator, org.wso2.carbon.databridge.commons,
                                org.wso2.carbon.databridge.commons.binary, disruptor
                            </includeArtifactIds>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-validation-jars</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib/dependencies/validation</outputDirectory>
                            <includeGroupIds>com.fasterxml.jackson.core,net.minidev,org.wso2.orbit.com.jayway.jsonpath,com.google.guava</includeGroupIds>
                            <includeArtifactIds>jackson-databind,jackson-core,jackson-annotations,json-smart,json-path,asm,guava</includeArtifactIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <delete dir="${project.build.directory}/extracted-distributions" includeemptydirs="true" />
                                <delete dir="${project.build.directory}/extracted-jre-linux" includeemptydirs="true" />
                                <delete dir="${project.build.directory}/extracted-jre-macos" includeemptydirs="true" />
                                <delete dir="${project.build.directory}/extracted-jre-windows" includeemptydirs="true" />
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>modify-toml</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <replaceregexp file="resources/conf/Ballerina.toml" match="mgw-interceptor-.*.jar" replace="mgw-interceptor-${project.version}.jar" byline="true" />
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>modify-version</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <replaceregexp file="resources/version.txt" match=".*" replace="${project.version}" byline="false" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>ballerina-platform</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>${basedir}/src/main/assembly/filter.properties</filter>
                            </filters>
                            <descriptors>
                                <descriptor>src/main/assembly/platform_zip.xml</descriptor>
                            </descriptors>
                            <finalName>platform</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>micro-gateway-toolkit-linux</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>${basedir}/src/main/assembly/filter.properties</filter>
                            </filters>
                            <descriptors>
                                <descriptor>src/main/assembly/linux_bin.xml</descriptor>
                            </descriptors>
                            <finalName>wso2am-micro-gw-toolkit-linux-${project.version}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>micro-gateway-toolkit-macos</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>${basedir}/src/main/assembly/filter.properties</filter>
                            </filters>
                            <descriptors>
                                <descriptor>src/main/assembly/macos_bin.xml</descriptor>
                            </descriptors>
                            <finalName>wso2am-micro-gw-toolkit-macos-${project.version}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>micro-gateway-toolkit-windows</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>${basedir}/src/main/assembly/filter.properties</filter>
                            </filters>
                            <descriptors>
                                <descriptor>src/main/assembly/windows_bin.xml</descriptor>
                            </descriptors>
                            <finalName>wso2am-micro-gw-toolkit-windows-${project.version}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>micro-gateway-runtime-linux</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>${basedir}/src/main/assembly/filter.properties</filter>
                            </filters>
                            <descriptors>
                                <descriptor>src/main/assembly/gw_runtimes/gw_runtime_linux.xml</descriptor>
                            </descriptors>
                            <finalName>wso2am-micro-gw-linux-${project.version}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>micro-gateway-runtime-mac-os</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>${basedir}/src/main/assembly/filter.properties</filter>
                            </filters>
                            <descriptors>
                                <descriptor>src/main/assembly/gw_runtimes/gw_runtime_macos.xml</descriptor>
                            </descriptors>
                            <finalName>wso2am-micro-gw-macos-${project.version}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>micro-gateway-runtime-windows</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>${basedir}/src/main/assembly/filter.properties</filter>
                            </filters>
                            <descriptors>
                                <descriptor>src/main/assembly/gw_runtimes/gw_runtime_windows.xml</descriptor>
                            </descriptors>
                            <finalName>wso2am-micro-gw-windows-${project.version}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven.clean.plugin.version}</version>
                <executions>
                    <execution>
                        <id>auto-clean</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>${basedir}/target/ballerina</directory>
                                </fileset>
                            </filesets>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Skip deploying the product zip to nexus -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
