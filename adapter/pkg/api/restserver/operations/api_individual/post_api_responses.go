// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package api_individual

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/wso2/micro-gw/pkg/api/models"
)

// PostAPIOKCode is the HTTP code returned for type PostAPIOK
const PostAPIOKCode int = 200

/*PostAPIOK Successful.
API deployed or updated Successfully.


swagger:response postApiOK
*/
type PostAPIOK struct {

	/*
	  In: Body
	*/
	Payload *models.DeployResponse `json:"body,omitempty"`
}

// NewPostAPIOK creates PostAPIOK with default headers values
func NewPostAPIOK() *PostAPIOK {

	return &PostAPIOK{}
}

// WithPayload adds the payload to the post Api o k response
func (o *PostAPIOK) WithPayload(payload *models.DeployResponse) *PostAPIOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post Api o k response
func (o *PostAPIOK) SetPayload(payload *models.DeployResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAPIOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAPIForbiddenCode is the HTTP code returned for type PostAPIForbidden
const PostAPIForbiddenCode int = 403

/*PostAPIForbidden Forbidden.
Not Authorized to deploy or update.


swagger:response postApiForbidden
*/
type PostAPIForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostAPIForbidden creates PostAPIForbidden with default headers values
func NewPostAPIForbidden() *PostAPIForbidden {

	return &PostAPIForbidden{}
}

// WithPayload adds the payload to the post Api forbidden response
func (o *PostAPIForbidden) WithPayload(payload *models.Error) *PostAPIForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post Api forbidden response
func (o *PostAPIForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAPIForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAPINotFoundCode is the HTTP code returned for type PostAPINotFound
const PostAPINotFoundCode int = 404

/*PostAPINotFound Not Found.
Requested API to update not found (when overwrite parameter is included).


swagger:response postApiNotFound
*/
type PostAPINotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostAPINotFound creates PostAPINotFound with default headers values
func NewPostAPINotFound() *PostAPINotFound {

	return &PostAPINotFound{}
}

// WithPayload adds the payload to the post Api not found response
func (o *PostAPINotFound) WithPayload(payload *models.Error) *PostAPINotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post Api not found response
func (o *PostAPINotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAPINotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAPIConflictCode is the HTTP code returned for type PostAPIConflict
const PostAPIConflictCode int = 409

/*PostAPIConflict Conflict.
API to import already exists (when overwrite parameter is not included).


swagger:response postApiConflict
*/
type PostAPIConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostAPIConflict creates PostAPIConflict with default headers values
func NewPostAPIConflict() *PostAPIConflict {

	return &PostAPIConflict{}
}

// WithPayload adds the payload to the post Api conflict response
func (o *PostAPIConflict) WithPayload(payload *models.Error) *PostAPIConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post Api conflict response
func (o *PostAPIConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAPIConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAPIInternalServerErrorCode is the HTTP code returned for type PostAPIInternalServerError
const PostAPIInternalServerErrorCode int = 500

/*PostAPIInternalServerError Internal Server Error.

swagger:response postApiInternalServerError
*/
type PostAPIInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostAPIInternalServerError creates PostAPIInternalServerError with default headers values
func NewPostAPIInternalServerError() *PostAPIInternalServerError {

	return &PostAPIInternalServerError{}
}

// WithPayload adds the payload to the post Api internal server error response
func (o *PostAPIInternalServerError) WithPayload(payload *models.Error) *PostAPIInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post Api internal server error response
func (o *PostAPIInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAPIInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
