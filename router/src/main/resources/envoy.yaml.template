# Copyright (c) 2023, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

admin:
  address:
    socket_address:
      address: '${ROUTER_ADMIN_HOST}'
      port_value: '${ROUTER_ADMIN_PORT}'
dynamic_resources:
  ads_config:
    api_type: GRPC
    transport_api_version: V3
    grpc_services:
      - envoy_grpc:
          cluster_name: xds_cluster
  cds_config:
    ads: {}
    resource_api_version: V3
  lds_config:
    ads: {}
    resource_api_version: V3
node:
  cluster: '${ROUTER_CLUSTER}'
  id: '${ROUTER_LABEL}'
  metadata:
    instanceIdentifier: ${HOSTNAME}
static_resources:
  clusters:
    - name: xds_cluster
      type: STRICT_DNS
      connect_timeout: ${XDS_CLUSTER_CONNECT_TIMEOUT}
      upstream_connection_options:
        tcp_keepalive:
          keepalive_probes: '${KEEPALIVE_PROBES}'
          keepalive_time: '${KEEPALIVE_TIMEOUT}'
          keepalive_interval: '${KEEPALIVE_INTERVAL}'
      load_assignment:
        cluster_name: xds_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: '${ADAPTER_HOST}'
                      port_value: '${ADAPTER_PORT}'
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          '@type': 'type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions'
          explicit_http_config:
            http2_protocol_options: {}
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          common_tls_context:
            tls_params:
              tls_minimum_protocol_version: TLSv1_2
              tls_maximum_protocol_version: TLSv1_2
            tls_certificates:
              private_key:
                filename: '${ROUTER_PRIVATE_KEY_PATH}'
              certificate_chain:
                filename: '${ROUTER_PUBLIC_CERT_PATH}'
            validation_context:
              trusted_ca:
                filename: '${ADAPTER_CA_CERT_PATH}'
    - name: ext-authz
      type: STRICT_DNS
      connect_timeout: 20s
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          '@type': 'type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions'
          explicit_http_config:
            http2_protocol_options: {}
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          common_tls_context:
            tls_params:
              tls_minimum_protocol_version: TLSv1_2
              tls_maximum_protocol_version: TLSv1_2
            tls_certificates:
              private_key:
                filename: '${ROUTER_PRIVATE_KEY_PATH}'
              certificate_chain:
                filename: '${ROUTER_PUBLIC_CERT_PATH}'
            validation_context:
              trusted_ca:
                filename: '${ENFORCER_CA_CERT_PATH}'
      load_assignment:
        cluster_name: ext-authz
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: '${ENFORCER_HOST}'
                      port_value: '${ENFORCER_PORT}'
    - name: access-logger
      type: STRICT_DNS
      connect_timeout: 200s
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          '@type': 'type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions'
          explicit_http_config:
            http2_protocol_options: {}
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          common_tls_context:
            tls_params:
              tls_minimum_protocol_version: TLSv1_2
              tls_maximum_protocol_version: TLSv1_2
            tls_certificates:
              private_key:
                filename: '${ROUTER_PRIVATE_KEY_PATH}'
              certificate_chain:
                filename: '${ROUTER_PUBLIC_CERT_PATH}'
            validation_context:
              trusted_ca:
                filename: '${ENFORCER_CA_CERT_PATH}'
      load_assignment:
        cluster_name: access-logger
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: '${ENFORCER_ANALYTICS_HOST}'
                      port_value: '${ENFORCER_ANALYTICS_RECEIVER_PORT}'
    - name: ext_authz_http_cluster
      type: STRICT_DNS
      connect_timeout: 20s
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          common_tls_context:
            tls_params:
              tls_minimum_protocol_version: TLSv1_2
              tls_maximum_protocol_version: TLSv1_2
            tls_certificates:
              private_key:
                filename: '${ROUTER_PRIVATE_KEY_PATH}'
              certificate_chain:
                filename: '${ROUTER_PUBLIC_CERT_PATH}'
            validation_context:
              trusted_ca:
                filename: '${ENFORCER_CA_CERT_PATH}'
      load_assignment:
        cluster_name: ext_authz_http_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: '${ENFORCER_HOST}'
                      port_value: 9001
